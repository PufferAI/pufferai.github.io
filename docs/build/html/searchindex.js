Search.setIndex({"docnames": ["autodoc/modules", "autodoc/pufferlib", "autodoc/pufferlib.bindings", "autodoc/pufferlib.bindings.base", "autodoc/pufferlib.bindings.nethack", "autodoc/pufferlib.cleanrl", "autodoc/pufferlib.emulation", "autodoc/pufferlib.evaluation", "autodoc/pufferlib.frameworks", "autodoc/pufferlib.rating", "autodoc/pufferlib.rllib", "autodoc/pufferlib.torch", "autodoc/pufferlib.utils", "autodoc/pufferlib.vecenvs", "autodoc/pufferlib.version", "index", "rst/api", "rst/examples", "rst/landing"], "filenames": ["autodoc/modules.rst", "autodoc/pufferlib.rst", "autodoc/pufferlib.bindings.rst", "autodoc/pufferlib.bindings.base.rst", "autodoc/pufferlib.bindings.nethack.rst", "autodoc/pufferlib.cleanrl.rst", "autodoc/pufferlib.emulation.rst", "autodoc/pufferlib.evaluation.rst", "autodoc/pufferlib.frameworks.rst", "autodoc/pufferlib.rating.rst", "autodoc/pufferlib.rllib.rst", "autodoc/pufferlib.torch.rst", "autodoc/pufferlib.utils.rst", "autodoc/pufferlib.vecenvs.rst", "autodoc/pufferlib.version.rst", "index.rst", "rst/api.rst", "rst/examples.rst", "rst/landing.rst"], "titles": ["pufferlib", "pufferlib package", "pufferlib.bindings package", "pufferlib.bindings.base module", "pufferlib.bindings.nethack module", "pufferlib.cleanrl module", "pufferlib.emulation module", "pufferlib.evaluation module", "pufferlib.frameworks module", "pufferlib.rating module", "pufferlib.rllib module", "pufferlib.torch module", "pufferlib.utils module", "pufferlib.vecenvs module", "pufferlib.version module", "Index", "Emulation", "Environment Bindings", "Introduction"], "terms": {"packag": [0, 18], "bind": [0, 1, 8, 10, 13, 15], "base": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17], "modul": [0, 1, 2, 17], "auto": [0, 1, 2, 3, 16, 17], "polici": [0, 1, 2, 3, 4, 7, 8, 9, 10, 16, 17], "nethack": [0, 1, 2, 17], "crop": [0, 1, 2, 4, 17], "cleanrl": [0, 1, 15], "make_cleanrl_polici": [0, 1, 5, 16, 17], "emul": [0, 1, 3, 4, 8, 15, 17], "pufferwrapp": [0, 1, 3, 6, 16, 17], "unpack_batched_ob": [0, 1, 3, 4, 6, 8, 16, 17], "evalu": [0, 1, 3, 4, 8, 11], "group": [0, 1, 7], "ungroup": [0, 1, 7], "serve_rl_model": [0, 1, 7], "query_act": [0, 1, 7], "run_gam": [0, 1, 7], "tournament": [0, 1, 7], "init": [0, 1, 3, 4, 7, 8, 11, 17], "add": [0, 1, 3, 4, 7, 8, 10, 11], "remov": [0, 1, 3, 4, 7, 8, 11, 12], "server": [0, 1, 7], "run_match": [0, 1, 7], "localtourna": [0, 1, 7], "servedtourna": [0, 1, 7], "framework": [0, 1, 4, 10, 16, 17, 18], "basepolici": [0, 1, 3, 4, 8, 16, 17], "critic": [0, 1, 2, 3, 4, 8, 16, 17], "encode_observ": [0, 1, 2, 3, 4, 8, 16, 17], "decode_act": [0, 1, 2, 3, 4, 8, 16, 17], "t_destin": [0, 1, 2, 3, 4, 8, 11], "add_modul": [0, 1, 2, 3, 4, 8, 11], "appli": [0, 1, 2, 3, 4, 8, 10, 11], "bfloat16": [0, 1, 2, 3, 4, 8, 11], "buffer": [0, 1, 2, 3, 4, 8, 11], "children": [0, 1, 2, 3, 4, 8, 11], "cpu": [0, 1, 2, 3, 4, 8, 11, 17], "cuda": [0, 1, 2, 3, 4, 8, 11, 17], "doubl": [0, 1, 2, 3, 4, 8, 11], "dump_patch": [0, 1, 2, 3, 4, 8, 11], "eval": [0, 1, 2, 3, 4, 8, 11], "extra_repr": [0, 1, 2, 3, 4, 8, 11], "float": [0, 1, 2, 3, 4, 6, 8, 11, 16, 17], "forward": [0, 1, 2, 3, 4, 6, 8, 10, 11, 16, 17], "get_buff": [0, 1, 2, 3, 4, 8, 11], "get_extra_st": [0, 1, 2, 3, 4, 8, 11], "get_paramet": [0, 1, 2, 3, 4, 8, 11], "get_submodul": [0, 1, 2, 3, 4, 8, 11], "half": [0, 1, 2, 3, 4, 8, 11], "ipu": [0, 1, 2, 3, 4, 8, 11], "load_state_dict": [0, 1, 2, 3, 4, 8, 11], "named_buff": [0, 1, 2, 3, 4, 8, 11], "named_children": [0, 1, 2, 3, 4, 8, 11], "named_modul": [0, 1, 2, 3, 4, 8, 11], "named_paramet": [0, 1, 2, 3, 4, 8, 11], "paramet": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 16, 17], "register_backward_hook": [0, 1, 2, 3, 4, 8, 11], "register_buff": [0, 1, 2, 3, 4, 8, 11, 17], "register_forward_hook": [0, 1, 2, 3, 4, 8, 11], "register_forward_pre_hook": [0, 1, 2, 3, 4, 8, 11], "register_full_backward_hook": [0, 1, 2, 3, 4, 8, 11], "register_load_state_dict_post_hook": [0, 1, 2, 3, 4, 8, 11], "register_modul": [0, 1, 2, 3, 4, 8, 11], "register_paramet": [0, 1, 2, 3, 4, 8, 11], "requires_grad_": [0, 1, 2, 3, 4, 8, 11], "set_extra_st": [0, 1, 2, 3, 4, 8, 11], "share_memori": [0, 1, 2, 3, 4, 8, 11], "state_dict": [0, 1, 2, 3, 4, 8, 11], "to_empti": [0, 1, 2, 3, 4, 8, 11], "train": [0, 1, 2, 3, 4, 8, 10, 11, 16, 17], "type": [0, 1, 2, 3, 4, 8, 10, 11, 16, 17], "xpu": [0, 1, 2, 3, 4, 8, 11], "zero_grad": [0, 1, 2, 3, 4, 8, 11, 17], "make_recurrent_polici": [0, 1, 8], "rate": [0, 1, 7, 17], "rank": [0, 1, 9], "openskillr": [0, 1, 9], "stat": [0, 1, 9, 17], "set_anchor": [0, 1, 9], "add_polici": [0, 1, 9], "remove_polici": [0, 1, 9], "updat": [0, 1, 3, 4, 7, 8, 9, 11, 12, 17], "rllib": [0, 1, 15], "make_rllib_tun": [0, 1, 10, 16, 17], "register_env": [0, 1, 10, 16, 17], "read_checkpoint": [0, 1, 10, 16], "create_polici": [0, 1, 10, 16], "make_rllib_polici": [0, 1, 10, 16], "rlpredictor": [0, 1, 7, 10, 16], "predict": [0, 1, 10, 16], "from_checkpoint": [0, 1, 10], "from_pandas_udf": [0, 1, 10], "get_preprocessor": [0, 1, 10], "set_preprocessor": [0, 1, 10], "callback": [0, 1, 10, 16, 17], "on_train_result": [0, 1, 10, 16], "on_episode_end": [0, 1, 10, 16], "on_algorithm_init": [0, 1, 10], "on_create_polici": [0, 1, 10], "on_episode_start": [0, 1, 10], "on_episode_step": [0, 1, 10], "on_learn_on_batch": [0, 1, 10], "on_postprocess_trajectori": [0, 1, 10], "on_sample_end": [0, 1, 10], "on_sub_environment_cr": [0, 1, 10], "on_trainer_init": [0, 1, 10], "torch": [0, 1, 3, 4, 8, 10, 17], "batchfirstlstm": [0, 1, 11, 17], "all_weight": [0, 1, 11], "check_forward_arg": [0, 1, 11], "check_hidden_s": [0, 1, 11], "check_input": [0, 1, 11], "flatten_paramet": [0, 1, 11], "get_expected_cell_s": [0, 1, 11], "get_expected_hidden_s": [0, 1, 11], "permute_hidden": [0, 1, 11], "reset_paramet": [0, 1, 11], "mode": [0, 1, 3, 4, 7, 8, 10, 11, 16], "input_s": [0, 1, 3, 4, 8, 11, 16, 17], "hidden_s": [0, 1, 3, 4, 8, 11, 16, 17], "num_lay": [0, 1, 4, 11, 17], "bia": [0, 1, 3, 4, 8, 11], "batch_first": [0, 1, 11], "dropout": [0, 1, 3, 4, 8, 11], "bidirect": [0, 1, 11], "proj_siz": [0, 1, 11], "util": [0, 1, 3, 4, 8, 11, 16, 17, 18], "check_env": [0, 1, 12], "is_dict_spac": [0, 1, 12], "is_multiag": [0, 1, 12], "current_datetim": [0, 1, 12], "myprint": [0, 1, 12], "dotdict": [0, 1, 12, 17], "clear": [0, 1, 12], "copi": [0, 1, 3, 4, 8, 11, 12], "fromkei": [0, 1, 12], "get": [0, 1, 10, 12, 16], "item": [0, 1, 12, 17], "kei": [0, 1, 3, 4, 8, 9, 11, 12, 17], "pop": [0, 1, 12], "popitem": [0, 1, 12], "setdefault": [0, 1, 12], "valu": [0, 1, 3, 4, 8, 11, 12, 16, 17], "vecenv": [0, 1, 17], "make_remote_env": [0, 1, 13], "single_observation_spac": [0, 1, 3, 13, 16, 17], "single_action_spac": [0, 1, 3, 13, 16, 17], "reset": [0, 1, 6, 11, 13, 16, 17], "close": [0, 1, 13, 17], "step": [0, 1, 6, 7, 10, 13, 16, 17], "version": [0, 1, 3, 4, 8, 11, 17], "custom_model_config": [1, 2, 3, 4, 16, 17], "env_nam": [3, 4, 16, 17], "none": [3, 4, 6, 8, 9, 10, 11, 12, 16, 17], "env": [3, 6, 10, 12, 16, 17], "env_cl": [3, 4, 16, 17], "env_arg": [3, 4, 16, 17], "env_kwarg": [3, 4, 16], "kwarg": [3, 4, 6, 8, 10, 11, 16, 17], "creat": [3, 4, 7, 8, 10, 11, 12, 16], "specifi": [3, 4, 6, 8, 11, 12, 16], "environ": [3, 4, 6, 7, 9, 10, 15, 16, 18], "name": [3, 4, 7, 8, 9, 10, 11, 16, 17], "infer": [3, 7, 10, 16], "from": [3, 4, 7, 8, 9, 10, 11, 12, 16, 17], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], "object": [3, 4, 7, 8, 9, 10, 11, 12, 13, 16], "wrap": [3, 4, 5, 6, 8, 10, 11, 16], "altern": [3, 16], "argument": [3, 4, 8, 10, 11, 16], "keyword": [3, 4, 8, 11, 16], "allow": [3, 4, 8, 11, 16, 18], "you": [3, 4, 6, 8, 9, 10, 11, 16, 18], "directli": [3, 10, 16], "return": [3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17], "env_creat": [3, 7, 10, 13, 16], "function": [3, 4, 6, 7, 8, 9, 10, 11, 16, 17], "observ": [3, 4, 6, 8, 16], "space": [3, 4, 6, 8, 12, 16, 17], "singl": [3, 4, 7, 8, 10, 11, 16], "agent": [3, 6, 7, 9, 10, 16, 17], "action": [3, 4, 6, 7, 8, 13, 16, 17], "A": [3, 4, 6, 8, 10, 11, 16], "follow": [3, 4, 8, 11, 12, 16], "properti": [3, 4, 9, 11, 13, 16, 17], "custom": [3, 4, 8, 10, 11, 15, 16], "thi": [3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18], "observation_spac": [3, 16, 17], "action_spac": [3, 16], "lstm_layer": [3, 4, 5, 8, 10, 16, 17], "default": [3, 4, 8, 10, 11, 12, 16], "pytorch": [3, 4, 5, 8, 15, 17], "It": [3, 4, 8, 10, 11, 16, 18], "": [3, 4, 8, 10, 11, 12, 16, 17], "just": [3, 10, 16], "linear": [3, 4, 8, 11, 16, 17], "layer": [3, 16, 17, 18], "over": [3, 4, 8, 11, 16, 17, 18], "flatten": [3, 6, 16, 17], "ob": [3, 4, 7, 8, 16, 17], "decod": [3, 4, 8, 16], "i": [3, 4, 8, 10, 11, 12, 16, 17, 18], "debug": [3, 16, 18], "onli": [3, 4, 8, 10, 11, 16, 17], "good": [3, 16], "almost": [3, 16], "ani": [3, 4, 6, 8, 10, 11, 16], "instanti": [3, 10, 16], "wrapper": [3, 7, 9, 10, 16, 18], "hidden": [3, 4, 8, 11, 16, 17], "comput": [3, 4, 8, 9, 11, 16], "state": [3, 4, 8, 10, 11, 16, 17], "env_output": [3, 4, 16, 17], "encod": [3, 4, 7, 8, 16], "flat": [3, 4, 8, 16], "vector": [3, 4, 8, 16], "call": [3, 4, 6, 8, 9, 10, 11, 16], "unflatten": [3, 4, 8, 16], "lookup": [3, 4, 8, 16, 17], "concat": [3, 16], "true": [3, 4, 6, 8, 11, 16, 17], "multidiscret": [3, 4, 8, 16], "alia": [3, 4, 8, 11], "typevar": [3, 4, 8, 11], "bound": [3, 4, 7, 8, 11], "dict": [3, 4, 8, 10, 11, 12, 16, 17], "str": [3, 4, 7, 8, 10, 11, 16], "option": [3, 4, 8, 10, 11, 16], "child": [3, 4, 8, 11], "current": [3, 4, 8, 10, 11, 16], "The": [3, 4, 8, 10, 11, 16], "can": [3, 4, 8, 10, 11, 16, 17], "access": [3, 4, 8, 11, 12], "an": [3, 4, 6, 7, 8, 10, 11, 12, 16], "attribut": [3, 4, 8, 11, 12], "us": [3, 4, 7, 8, 10, 11, 16, 18], "given": [3, 4, 8, 10, 11, 12, 17], "string": [3, 4, 8, 11], "ad": [3, 4, 8, 10, 11], "fn": [3, 4, 8, 11], "callabl": [3, 4, 8, 10, 11, 16], "t": [3, 4, 8, 11, 17], "recurs": [3, 4, 8, 11], "everi": [3, 4, 8, 11], "submodul": [3, 4, 8, 11], "well": [3, 4, 8, 11, 16], "self": [3, 4, 8, 11, 17], "typic": [3, 4, 8, 9, 11], "includ": [3, 4, 6, 8, 10, 11, 16], "initi": [3, 4, 8, 10, 11], "model": [3, 4, 7, 8, 10, 11, 17], "see": [3, 4, 8, 11, 17], "also": [3, 4, 8, 10, 11, 16], "nn": [3, 4, 8, 11, 17], "doc": [3, 4, 8, 11, 17], "each": [3, 4, 8, 9, 10, 11], "exampl": [3, 4, 8, 11], "no_grad": [3, 4, 8, 11, 17], "def": [3, 4, 8, 11, 17], "init_weight": [3, 4, 8, 11], "m": [3, 4, 8, 11, 17], "print": [3, 4, 8, 11, 17], "weight": [3, 4, 8, 11, 17], "fill_": [3, 4, 8, 11], "1": [3, 4, 8, 9, 10, 11, 13, 16, 17], "0": [3, 4, 5, 7, 8, 9, 10, 11, 16, 17], "net": [3, 4, 8, 11, 17], "sequenti": [3, 4, 8, 11, 17], "2": [3, 4, 8, 9, 11, 12, 17], "in_featur": [3, 4, 8, 11], "out_featur": [3, 4, 8, 11], "contain": [3, 4, 8, 10, 11, 16], "tensor": [3, 4, 8, 11, 17], "cast": [3, 4, 8, 11, 17], "all": [3, 4, 8, 10, 11, 12], "point": [3, 4, 8, 9, 11], "datatyp": [3, 4, 6, 8, 11, 16], "method": [3, 4, 6, 7, 8, 9, 10, 11, 12, 16], "modifi": [3, 4, 8, 10, 11, 17], "place": [3, 4, 8, 11], "bool": [3, 4, 8, 11, 16], "iter": [3, 4, 8, 11, 12], "yield": [3, 4, 8, 11], "otherwis": [3, 4, 8, 11, 12], "ar": [3, 4, 8, 9, 10, 11, 12, 16], "direct": [3, 4, 8, 11], "member": [3, 4, 8, 11], "buf": [3, 4, 8, 11], "size": [3, 4, 8, 11], "20l": [3, 4, 8, 11], "1l": [3, 4, 8, 11], "5l": [3, 4, 8, 11], "immedi": [3, 4, 8, 10, 11], "move": [3, 4, 8, 11], "devic": [3, 4, 8, 11, 17], "union": [3, 4, 8, 10, 11], "int": [3, 4, 6, 8, 11, 16, 17], "gpu": [3, 4, 8, 11], "make": [3, 4, 8, 11, 17], "associ": [3, 4, 8, 11], "differ": [3, 4, 8, 11], "so": [3, 4, 8, 11, 17], "should": [3, 4, 8, 9, 10, 11, 16, 18], "befor": [3, 4, 6, 8, 10, 11, 16], "construct": [3, 4, 8, 11], "optim": [3, 4, 8, 11, 17], "live": [3, 4, 8, 11], "while": [3, 4, 8, 11], "being": [3, 4, 8, 11], "fals": [3, 4, 6, 7, 8, 11, 16, 17], "set": [3, 4, 8, 10, 11, 12, 16, 18], "ha": [3, 4, 8, 10, 11, 12], "effect": [3, 4, 8, 11], "certain": [3, 4, 8, 11], "document": [3, 4, 8, 11], "particular": [3, 4, 8, 11], "detail": [3, 4, 8, 11], "behavior": [3, 4, 8, 11], "thei": [3, 4, 8, 11], "affect": [3, 4, 8, 11], "e": [3, 4, 8, 10, 11, 12], "g": [3, 4, 8, 10, 11], "batchnorm": [3, 4, 8, 11], "etc": [3, 4, 8, 11], "equival": [3, 4, 8, 11], "local": [3, 4, 7, 8, 11, 17], "disabl": [3, 4, 8, 11], "grad": [3, 4, 8, 11], "comparison": [3, 4, 8, 11], "between": [3, 4, 8, 11], "sever": [3, 4, 8, 11, 18], "similar": [3, 4, 8, 11], "mechan": [3, 4, 8, 11], "mai": [3, 4, 8, 10, 11, 16], "confus": [3, 4, 8, 11], "extra": [3, 4, 8, 11], "represent": [3, 4, 8, 11], "To": [3, 4, 7, 8, 11], "inform": [3, 4, 8, 11], "re": [3, 4, 8, 11], "implement": [3, 4, 8, 10, 11, 16], "your": [3, 4, 6, 8, 10, 11, 16], "own": [3, 4, 8, 10, 11], "both": [3, 4, 8, 11], "line": [3, 4, 8, 11], "multi": [3, 4, 8, 10, 11], "accept": [3, 4, 8, 11], "input": [3, 4, 8, 10, 11, 16, 17], "defin": [3, 4, 6, 8, 11, 16], "perform": [3, 4, 7, 8, 10, 11, 16], "overridden": [3, 4, 8, 11], "subclass": [3, 4, 5, 8, 11, 16], "although": [3, 4, 8, 11], "recip": [3, 4, 8, 11], "pass": [3, 4, 6, 8, 10, 11, 16, 17], "need": [3, 4, 8, 11, 17], "within": [3, 4, 8, 10, 11], "one": [3, 4, 8, 11], "instanc": [3, 4, 6, 8, 10, 11, 16], "afterward": [3, 4, 8, 11], "instead": [3, 4, 8, 10, 11], "sinc": [3, 4, 8, 11], "former": [3, 4, 8, 11], "take": [3, 4, 6, 8, 10, 11, 16], "care": [3, 4, 8, 11, 17], "run": [3, 4, 7, 8, 10, 11, 16, 17], "regist": [3, 4, 8, 11], "hook": [3, 4, 8, 11], "latter": [3, 4, 8, 11], "silent": [3, 4, 8, 11], "ignor": [3, 4, 8, 11], "them": [3, 4, 8, 11], "target": [3, 4, 8, 11], "exist": [3, 4, 8, 11], "throw": [3, 4, 8, 11], "error": [3, 4, 8, 10, 11, 16, 17], "docstr": [3, 4, 8, 11], "more": [3, 4, 8, 11, 18], "explan": [3, 4, 8, 11], "how": [3, 4, 8, 11], "correctli": [3, 4, 8, 11], "fulli": [3, 4, 8, 11], "qualifi": [3, 4, 8, 11], "look": [3, 4, 8, 10, 11], "referenc": [3, 4, 8, 11], "rais": [3, 4, 8, 11, 12], "attributeerror": [3, 4, 8, 11], "If": [3, 4, 6, 8, 10, 11, 12, 16, 18], "refer": [3, 4, 8, 10, 11, 16], "invalid": [3, 4, 8, 11], "path": [3, 4, 8, 11, 17], "resolv": [3, 4, 8, 11], "someth": [3, 4, 8, 11], "correspond": [3, 4, 8, 11, 12], "store": [3, 4, 8, 10, 11, 16], "when": [3, 4, 8, 10, 11, 16], "build": [3, 4, 8, 11], "note": [3, 4, 8, 10, 11, 16, 17], "pickleabl": [3, 4, 8, 11], "ensur": [3, 4, 8, 11], "work": [3, 4, 8, 11, 16, 17, 18], "serial": [3, 4, 8, 11], "we": [3, 4, 8, 11, 18], "provid": [3, 4, 6, 8, 9, 11, 12, 16, 18], "backward": [3, 4, 8, 11, 17], "compat": [3, 4, 5, 8, 10, 11, 16, 18], "guarante": [3, 4, 8, 11], "other": [3, 4, 8, 10, 11], "break": [3, 4, 8, 11, 17], "pickl": [3, 4, 8, 11], "form": [3, 4, 8, 11], "chang": [3, 4, 8, 11], "For": [3, 4, 8, 11], "let": [3, 4, 8, 11], "sai": [3, 4, 8, 11], "have": [3, 4, 8, 11, 18], "like": [3, 4, 8, 11, 12], "net_b": [3, 4, 8, 11], "net_c": [3, 4, 8, 11], "conv": [3, 4, 8, 11], "conv2d": [3, 4, 8, 11, 17], "16": [3, 4, 8, 10, 11, 16, 17], "33": [3, 4, 7, 8, 11], "kernel_s": [3, 4, 8, 11, 17], "3": [3, 4, 8, 9, 10, 11, 16, 17], "stride": [3, 4, 8, 11, 17], "100": [3, 4, 8, 11], "200": [3, 4, 8, 11], "diagram": [3, 4, 8, 11], "show": [3, 4, 8, 11], "nest": [3, 4, 8, 11], "which": [3, 4, 8, 10, 11, 16], "itself": [3, 4, 8, 11], "two": [3, 4, 8, 11], "check": [3, 4, 8, 11, 16], "whether": [3, 4, 6, 8, 11, 16], "would": [3, 4, 8, 10, 11], "runtim": [3, 4, 8, 11], "degre": [3, 4, 8, 11], "queri": [3, 4, 7, 8, 11], "against": [3, 4, 8, 9, 11], "achiev": [3, 4, 8, 11], "same": [3, 4, 6, 8, 9, 10, 11, 16], "result": [3, 4, 7, 8, 10, 11, 16, 17], "o": [3, 4, 8, 11, 17], "n": [3, 4, 8, 10, 11, 13, 16, 17], "number": [3, 4, 6, 7, 8, 11, 16, 17], "transit": [3, 4, 8, 11], "simpl": [3, 4, 8, 9, 11], "some": [3, 4, 8, 11], "alwai": [3, 4, 8, 11], "abov": [3, 4, 8, 11], "map": [3, 4, 7, 8, 10, 11, 16, 17], "strict": [3, 4, 8, 11], "its": [3, 4, 8, 11], "descend": [3, 4, 8, 11], "must": [3, 4, 5, 8, 10, 11, 16, 17], "exactli": [3, 4, 8, 9, 11], "match": [3, 4, 7, 8, 11], "persist": [3, 4, 8, 11], "strictli": [3, 4, 8, 11], "enforc": [3, 4, 8, 11], "missing_kei": [3, 4, 8, 11], "list": [3, 4, 8, 9, 11], "miss": [3, 4, 8, 11], "unexpected_kei": [3, 4, 8, 11], "unexpect": [3, 4, 8, 11], "namedtupl": [3, 4, 8, 11], "field": [3, 4, 8, 11], "runtimeerror": [3, 4, 8, 11], "network": [3, 4, 5, 6, 8, 11, 16, 17], "duplic": [3, 4, 8, 11], "onc": [3, 4, 8, 9, 11], "In": [3, 4, 8, 10, 11, 12, 16], "l": [3, 4, 8, 11, 17], "idx": [3, 4, 8, 11], "enumer": [3, 4, 8, 11], "prefix": [3, 4, 8, 11], "tupl": [3, 4, 8, 10, 11, 12, 17], "prepend": [3, 4, 8, 11], "running_var": [3, 4, 8, 11], "conv4": [3, 4, 8, 11], "conv5": [3, 4, 8, 11], "memo": [3, 4, 8, 11], "remove_dupl": [3, 4, 8, 11], "alreadi": [3, 4, 8, 11], "param": [3, 4, 8, 11, 17], "removablehandl": [3, 4, 8, 11], "deprec": [3, 4, 8, 11], "favor": [3, 4, 8, 11], "futur": [3, 4, 8, 11], "handl": [3, 4, 8, 10, 11, 16], "consid": [3, 4, 8, 11], "running_mean": [3, 4, 8, 11], "part": [3, 4, 8, 10, 11], "save": [3, 4, 8, 10, 11, 17], "alongsid": [3, 4, 8, 11], "non": [3, 4, 8, 11], "oper": [3, 4, 8, 11], "zero": [3, 4, 8, 11, 17], "num_featur": [3, 4, 8, 11], "time": [3, 4, 8, 11, 17, 18], "after": [3, 4, 6, 8, 10, 11, 16], "output": [3, 4, 8, 11, 17], "signatur": [3, 4, 8, 11], "posit": [3, 4, 8, 11], "won": [3, 4, 8, 11], "inplac": [3, 4, 8, 11], "pre": [3, 4, 8, 11], "invok": [3, 4, 8, 11], "user": [3, 4, 8, 10, 11, 16], "either": [3, 4, 8, 9, 11, 12], "unless": [3, 4, 8, 11], "gradient": [3, 4, 8, 11], "respect": [3, 4, 8, 11], "grad_input": [3, 4, 8, 11], "grad_output": [3, 4, 8, 11], "new": [3, 4, 8, 10, 11, 12], "subsequ": [3, 4, 8, 11], "entri": [3, 4, 8, 11], "technic": [3, 4, 8, 11], "reason": [3, 4, 8, 11], "receiv": [3, 4, 8, 11], "view": [3, 4, 8, 11, 12, 17], "similarli": [3, 4, 8, 11], "caller": [3, 4, 8, 11], "post": [3, 4, 8, 11], "incompatible_kei": [3, 4, 8, 11], "consist": [3, 4, 8, 11], "modif": [3, 4, 8, 11], "expect": [3, 4, 8, 11], "addit": [3, 4, 6, 8, 10, 11, 16, 18], "thrown": [3, 4, 8, 10, 11, 16], "clearn": [3, 4, 8, 11], "out": [3, 4, 8, 11, 12, 17, 18], "avoid": [3, 4, 8, 11], "requires_grad": [3, 4, 8, 11], "autograd": [3, 4, 8, 11], "record": [3, 4, 8, 11, 17], "help": [3, 4, 8, 11], "freez": [3, 4, 8, 11], "finetun": [3, 4, 8, 11], "individu": [3, 4, 8, 11], "gan": [3, 4, 8, 11], "found": [3, 4, 8, 11, 12, 17], "share_memory_": [3, 4, 8, 11], "arg": [3, 4, 6, 8, 11, 16, 17], "destin": [3, 4, 8, 11], "keep_var": [3, 4, 8, 11], "dictionari": [3, 4, 8, 9, 11, 12], "whole": [3, 4, 8, 11], "averag": [3, 4, 8, 11], "order": [3, 4, 8, 9, 11, 12], "howev": [3, 4, 8, 11], "releas": [3, 4, 8, 11, 18], "pleas": [3, 4, 8, 11], "design": [3, 4, 8, 11], "end": [3, 4, 8, 10, 11, 17], "ordereddict": [3, 4, 8, 11], "compos": [3, 4, 8, 11], "detach": [3, 4, 8, 11], "dtype": [3, 4, 8, 11], "non_block": [3, 4, 8, 11], "memory_format": [3, 4, 8, 11], "channels_last": [3, 4, 8, 11], "Its": [3, 4, 8, 11], "complex": [3, 4, 8, 11, 18], "integr": [3, 4, 8, 11, 17], "unchang": [3, 4, 8, 11], "tri": [3, 4, 8, 11], "convert": [3, 4, 8, 11], "asynchron": [3, 4, 8, 11], "host": [3, 4, 8, 11], "possibl": [3, 4, 8, 10, 11], "pin": [3, 4, 8, 11], "memori": [3, 4, 8, 11], "below": [3, 4, 8, 11, 17], "desir": [3, 4, 8, 11], "whose": [3, 4, 8, 11], "format": [3, 4, 8, 11], "4d": [3, 4, 8, 11], "1913": [3, 4, 8, 11], "3420": [3, 4, 8, 11], "5113": [3, 4, 8, 11], "2325": [3, 4, 8, 11], "float64": [3, 4, 8, 11], "gpu1": [3, 4, 8, 11], "1914": [3, 4, 8, 11], "5112": [3, 4, 8, 11], "2324": [3, 4, 8, 11], "float16": [3, 4, 8, 11], "cdoubl": [3, 4, 8, 11], "3741": [3, 4, 8, 11], "j": [3, 4, 8, 11], "2382": [3, 4, 8, 11], "5593": [3, 4, 8, 11], "4443": [3, 4, 8, 11], "complex128": [3, 4, 8, 11], "ones": [3, 4, 8, 11], "6122": [3, 4, 8, 11], "1150": [3, 4, 8, 11], "without": [3, 4, 8, 11], "storag": [3, 4, 8, 11, 17], "dst_type": [3, 4, 8, 11], "set_to_non": [3, 4, 8, 11], "under": [3, 4, 8, 11, 18], "context": [3, 4, 8, 11], "rllib_don": [4, 6, 16, 17], "observation_shap": [4, 17], "num_act": [4, 17], "use_lstm": [4, 17], "embedding_dim": [4, 17], "crop_dim": [4, 17], "pure": [4, 8, 16], "spec": [4, 8, 15, 17], "repackag": [4, 8, 16], "rl": [4, 7, 8, 16, 17, 18], "height": [4, 17], "width": [4, 17], "height_target": [4, 17], "width_target": [4, 17], "helper": [4, 17], "nethacknet": [4, 17], "intern": [4, 9, 11], "share": [4, 11], "scriptmodul": [4, 11], "coordin": [4, 17], "calcul": [4, 17], "center": [4, 17], "around": [4, 17], "x": [4, 17], "y": [4, 17], "b": [4, 17], "h": [4, 17], "w": [4, 7, 17], "policy_cl": [5, 10, 16], "feature_pars": [6, 16], "reward_shap": [6, 16], "emulate_flat_ob": [6, 16], "emulate_flat_atn": [6, 16, 17], "emulate_const_horizon": [6, 16], "1024": [6, 7, 10, 16], "emulate_const_num_ag": [6, 16], "128": [6, 10, 16, 17], "obs_dtyp": [6, 16, 17], "numpi": [6, 16, 17], "float32": [6, 16], "creator": [6, 16], "transform": [6, 16], "reward": [6, 16, 17], "boolean": [6, 16], "__all__": [6, 16], "done": [6, 10, 16, 17], "max": [6, 16, 17], "simul": [6, 9, 16], "manual": [6, 16], "pad": [6, 10, 16, 17], "32": [6, 16, 17], "pettingzoo": [6, 16, 17, 18], "compliant": [6, 16], "pufferenv": [6, 16], "origin": [6, 16, 17], "featur": [6, 16], "pars": [6, 10, 16], "structured_observation_spac": [6, 16], "obs_spac": [6, 16], "packed_ob": [6, 16], "unpack": [6, 16], "batch": [6, 10, 16, 17], "funtion": [6, 16], "policy_mapping_fn": 7, "episod": [7, 9, 10, 16, 17], "checkpoint": [7, 10, 17], "rlmodel": 7, "serv": 7, "deploy": 7, "uri": 7, "start": [7, 10, 17], "rai": [7, 10, 17], "deploi": 7, "load": [7, 10], "endpoint": 7, "ndarrai": [7, 17], "send": 7, "http": [7, 17], "request": 7, "horizon": 7, "render": 7, "through": 7, "obtain": 7, "num_polici": 7, "policy_sampling_fn": 7, "random": [7, 17], "sampl": [7, 10], "mu": [7, 9], "1000": [7, 17], "anchor_mu": [7, 9], "1500": 7, "sigma": [7, 9], "333333333333336": 7, "abc": [7, 8], "pool": 7, "anchor": [7, 9], "tune_path": [7, 10, 16], "out_fil": 7, "_io": 7, "textiowrapp": 7, "stdout": 7, "utf": 7, "8": [7, 17], "sleep_second": 7, "10": 7, "select": 7, "particip": 7, "game": [7, 17], "id": [7, 9, 10, 16], "subset": 7, "policy_checkpoint": 7, "abstract": [8, 16], "flat_observ": [8, 16], "flat_hidden": [8, 16], "batch_state_first": 8, "lstm": [8, 11, 17], "specif": [8, 10, 16, 18], "policy_id": [9, 10], "score": 9, "per": 9, "openskil": 9, "estim": 9, "rel": 9, "skill": 9, "raw": 9, "baselin": [9, 17], "cannot": 9, "68": 9, "95": [9, 17], "99": [9, 17], "7": 9, "win": 9, "lower": 9, "sr": 9, "todo": [9, 17], "multipl": 9, "OR": 9, "algorithm": [10, 16, 17], "ppo": [10, 16, 17], "num_gpu": [10, 16], "num_work": [10, 13, 16, 17], "4": [10, 16, 17], "num_envs_per_work": [10, 16], "rollout_fragment_length": [10, 16], "train_batch_s": [10, 16], "sgd_minibatch_s": [10, 16], "num_sgd_it": [10, 16], "max_seq_len": [10, 16], "training_step": [10, 16], "checkpoints_to_keep": [10, 16], "5": [10, 16, 17], "checkpoint_frequ": [10, 16], "tuner": [10, 16, 17], "sane": [10, 16], "preprocessor": [10, 16], "subclasses": [10, 16], "predictor": [10, 16], "__init__": [10, 16, 17], "data": [10, 11, 16, 17], "databatchtyp": [10, 16], "These": [10, 16], "_predict_panda": [10, 16], "classmethod": 10, "requir": 10, "wa": [10, 17], "air": [10, 17], "rltrainer": [10, 17], "trainer": [10, 16], "configur": 10, "pandas_udf": 10, "datafram": 10, "panda": 10, "udf": 10, "prior": 10, "execut": [10, 17], "legacy_callbacks_dict": [10, 16], "defaultcallback": [10, 17], "epoch": [10, 16, 17], "level": [10, 16], "worker": [10, 16], "base_env": [10, 16], "rollout": [10, 16], "baseenv": [10, 16], "underli": [10, 16], "sub": [10, 16], "retriev": [10, 16], "get_sub_environ": [10, 16], "default_polici": [10, 16], "user_data": [10, 16], "temporari": [10, 16], "custom_metr": [10, 16], "metric": [10, 16], "case": [10, 12, 16], "failur": [10, 16], "except": [10, 16], "finish": [10, 16], "properli": [10, 16], "logic": [10, 16, 17], "placehold": [10, 16], "setup": [10, 17], "actual": 10, "whenev": 10, "newli": 10, "rolloutwork": 10, "episodev2": 10, "train_batch": 10, "samplebatch": 10, "begin": 10, "learn_on_batch": 10, "via": 10, "pad_batch_to_sequences_of_same_s": 10, "info": [10, 17], "column": 10, "avail": 10, "tf1": 10, "due": 10, "fact": 10, "static": 10, "graph": 10, "mistak": 10, "present": [10, 12], "though": 10, "tf2": 10, "mutat": 10, "gener": 10, "agent_id": 10, "postprocessed_batch": 10, "original_batch": 10, "postprocess_fn": 10, "do": [10, 17, 18], "postprocess": 10, "trajectori": 10, "unpostprocess": 10, "sub_environ": 10, "env_context": 10, "envcontext": 10, "been": 10, "usual": 10, "gym": [10, 17, 18], "valid": 10, "built": 10, "overrid": 10, "validate_env": 10, "video": 10, "seed": [10, 17], "constructor": 10, "hx": 11, "batch_siz": [11, 17], "expected_hidden_s": 11, "msg": 11, "got": 11, "pointer": 11, "faster": 11, "code": [11, 18], "right": 11, "now": 11, "cudnn": [11, 17], "enabl": 11, "op": 11, "permut": 11, "d": 12, "dot": 12, "notat": 12, "shallow": 12, "els": [12, 17], "k": [12, 17], "v": 12, "keyerror": 12, "pair": [12, 17], "lifo": 12, "last": 12, "first": [12, 18], "empti": 12, "insert": 12, "f": [12, 17], "doe": 12, "lack": 12, "envs_per_work": [13, 17], "introduct": 15, "instal": 15, "licens": 15, "core": [16, 17], "api": 16, "advanc": 16, "pufferlib": [16, 17, 18], "sourc": 16, "tool": [16, 18], "yet": 16, "test": [16, 18], "improv": 16, "librari": 16, "automat": 16, "most": 16, "pdb": 17, "import": 17, "set_trac": 17, "np": 17, "dataclass": 17, "classic_control": 17, "box2d": 17, "griddli": 17, "nle": 17, "nmmo": 17, "magent": 17, "battle_v3": 17, "butterfli": 17, "knights_archers_zombies_v8": 17, "kaz": 17, "convers": 17, "aec_to_parallel_wrapp": 17, "smac": 17, "starcraft2pzenv": 17, "_parallel_env": 17, "smac_env": 17, "env_bind": 17, "envspec": 17, "cl": 17, "env_spec": 17, "raw_env": 17, "make_griddly_env": 17, "gdy": 17, "spider": 17, "v0": 17, "lambda": 17, "env_str": 17, "uint8": 17, "cartpoleenv": 17, "breakout": 17, "v4": 17, "mask": 17, "collect": 17, "defaultdict": 17, "checkpointconfig": 17, "config": 17, "runconfig": 17, "scalingconfig": 17, "tune": 17, "registri": 17, "wandb": 17, "wandbloggercallback": 17, "rl_trainer": 17, "modelcatalog": 17, "recurrent_net": 17, "recurrentnetwork": 17, "torch_modelv2": 17, "torchmodelv2": 17, "super": 17, "9": 17, "512": 17, "nvec": 17, "glyph_shap": 17, "glyph": 17, "shape": 17, "blstats_siz": 17, "blstat": 17, "k_dim": 17, "h_dim": 17, "emb": 17, "embed": 17, "max_glyph": 17, "filter": 17, "dimens": 17, "p": 17, "intermedi": 17, "convnet": 17, "in_channel": 17, "out_channel": 17, "interleav": 17, "val": 17, "zip": 17, "conv_extract": 17, "rang": 17, "extract_represent": 17, "elu": 17, "len": 17, "cnn": 17, "conv_extract_crop": 17, "extract_crop_represent": 17, "out_dim": 17, "full": [17, 18], "embed_blstat": 17, "relu": 17, "fc": 17, "_select": 17, "slow": 17, "github": [17, 18], "com": 17, "issu": 17, "24912": 17, "index_select": 17, "reshap": 17, "tb": 17, "_": 17, "long": 17, "bl": 17, "blstats_emb": 17, "assert": 17, "crop_emb": 17, "transpos": 17, "crop_rep": 17, "glyphs_emb": 17, "glyphs_rep": 17, "st": 17, "cat": 17, "dim": 17, "width_grid": 17, "_step_to_rang": 17, "expand": 17, "height_grid": 17, "clone": 17, "necessari": 17, "34880": 17, "x_shift": 17, "y_shift": 17, "grid": 17, "stack": 17, "round": 17, "grid_sampl": 17, "align_corn": 17, "squeez": 17, "delta": 17, "num_step": 17, "integ": 17, "distanc": 17, "arang": 17, "env_def": 17, "fit": 17, "experi": 17, "dev": 17, "ppo_atari_lstmpi": 17, "tensorboard": 17, "summarywrit": 17, "exp_nam": 17, "basenam": 17, "__file__": 17, "torch_determinist": 17, "track": 17, "wandb_project_nam": 17, "wandb_ent": 17, "capture_video": 17, "total_timestep": 17, "10000000": 17, "learning_r": 17, "5e": 17, "num_env": 17, "anneal_lr": 17, "gamma": 17, "gae_lambda": 17, "num_minibatch": 17, "update_epoch": 17, "norm_adv": 17, "clip_coef": 17, "clip_vloss": 17, "ent_coef": 17, "01": 17, "vf_coef": 17, "max_grad_norm": 17, "target_kl": 17, "env_id": 17, "minibatch_s": 17, "run_nam": 17, "__": 17, "project": 17, "entiti": 17, "sync_tensorboard": 17, "var": 17, "monitor_gym": 17, "save_cod": 17, "writer": 17, "add_text": 17, "hyperparamet": 17, "join": 17, "try": 17, "NOT": 17, "TO": 17, "manual_se": 17, "backend": 17, "determinist": 17, "is_avail": 17, "recomput": 17, "multiag": 17, "cpu_count": 17, "adam": 17, "lr": 17, "ep": 17, "1e": 17, "algo": 17, "logprob": 17, "global_step": 17, "start_tim": 17, "next_ob": 17, "next_don": 17, "next_lstm_stat": 17, "cell": 17, "youtu": 17, "8hycnivrbsu": 17, "num_upd": 17, "initial_lstm_st": 17, "anneal": 17, "instruct": 17, "frac": 17, "lrnow": 17, "param_group": 17, "get_action_and_valu": 17, "log": 17, "episodic_return": 17, "r": 17, "add_scalar": 17, "chart": 17, "episodic_length": 17, "bootstrap": 17, "next_valu": 17, "get_valu": 17, "advantag": 17, "zeros_lik": 17, "lastgaelam": 17, "revers": 17, "nextnontermin": 17, "nextvalu": 17, "b_ob": 17, "b_logprob": 17, "b_action": 17, "b_done": 17, "b_advantag": 17, "b_return": 17, "b_valu": 17, "envsperbatch": 17, "envind": 17, "flatind": 17, "clipfrac": 17, "shuffl": 17, "mbenvind": 17, "mb_ind": 17, "ravel": 17, "realli": 17, "about": 17, "index": 17, "newlogprob": 17, "entropi": 17, "newvalu": 17, "logratio": 17, "ratio": 17, "exp": 17, "approx_kl": 17, "joschu": 17, "blog": 17, "kl": 17, "approx": 17, "html": 17, "old_approx_kl": 17, "mean": 17, "ab": 17, "mb_advantag": 17, "std": 17, "loss": 17, "pg_loss1": 17, "pg_loss2": 17, "clamp": 17, "pg_loss": 17, "v_loss_unclip": 17, "v_clip": 17, "v_loss_clip": 17, "v_loss_max": 17, "v_loss": 17, "entropy_loss": 17, "clip_grad_norm_": 17, "y_pred": 17, "y_true": 17, "var_i": 17, "explained_var": 17, "nan": 17, "plot": 17, "purpos": 17, "value_loss": 17, "policy_loss": 17, "explained_vari": 17, "sp": 17, "__name__": 17, "__main__": 17, "quick": 18, "link": 18, "discord": 18, "twitter": 18, "wip": 18, "stabl": 18, "christma": 18, "better": 18, "standard": 18, "particularli": 18, "spend": 18, "less": 18, "generaliz": 18, "compon": 18, "pip": 18, "want": 18, "contribut": 18, "puffertank": 18, "docker": 18, "foss": 18, "mit": 18, "maintain": 18, "pufferai": 18, "privat": 18, "repositori": 18}, "objects": {"": [[1, 0, 0, "-", "pufferlib"]], "pufferlib": [[2, 0, 0, "-", "bindings"], [5, 0, 0, "-", "cleanrl"], [6, 0, 0, "-", "emulation"], [7, 0, 0, "-", "evaluation"], [8, 0, 0, "-", "frameworks"], [9, 0, 0, "-", "rating"], [10, 0, 0, "-", "rllib"], [11, 0, 0, "-", "torch"], [12, 0, 0, "-", "utils"], [13, 0, 0, "-", "vecenvs"], [14, 0, 0, "-", "version"]], "pufferlib.bindings": [[3, 0, 0, "-", "base"], [4, 0, 0, "-", "nethack"]], "pufferlib.bindings.base": [[3, 1, 1, "", "Base"], [3, 1, 1, "", "Policy"], [3, 5, 1, "", "auto"]], "pufferlib.bindings.base.Base": [[3, 2, 1, "", "custom_model_config"]], "pufferlib.bindings.base.Policy": [[3, 3, 1, "", "T_destination"], [3, 4, 1, "", "add_module"], [3, 4, 1, "", "apply"], [3, 4, 1, "", "bfloat16"], [3, 4, 1, "", "buffers"], [3, 4, 1, "", "children"], [3, 4, 1, "", "cpu"], [3, 4, 1, "", "critic"], [3, 4, 1, "", "cuda"], [3, 4, 1, "", "decode_actions"], [3, 4, 1, "", "double"], [3, 3, 1, "", "dump_patches"], [3, 4, 1, "", "encode_observations"], [3, 4, 1, "", "eval"], [3, 4, 1, "", "extra_repr"], [3, 4, 1, "", "float"], [3, 4, 1, "", "forward"], [3, 4, 1, "", "get_buffer"], [3, 4, 1, "", "get_extra_state"], [3, 4, 1, "", "get_parameter"], [3, 4, 1, "", "get_submodule"], [3, 4, 1, "", "half"], [3, 4, 1, "", "ipu"], [3, 4, 1, "", "load_state_dict"], [3, 4, 1, "", "modules"], [3, 4, 1, "", "named_buffers"], [3, 4, 1, "", "named_children"], [3, 4, 1, "", "named_modules"], [3, 4, 1, "", "named_parameters"], [3, 4, 1, "", "parameters"], [3, 4, 1, "", "register_backward_hook"], [3, 4, 1, "", "register_buffer"], [3, 4, 1, "", "register_forward_hook"], [3, 4, 1, "", "register_forward_pre_hook"], [3, 4, 1, "", "register_full_backward_hook"], [3, 4, 1, "", "register_load_state_dict_post_hook"], [3, 4, 1, "", "register_module"], [3, 4, 1, "", "register_parameter"], [3, 4, 1, "", "requires_grad_"], [3, 4, 1, "", "set_extra_state"], [3, 4, 1, "", "share_memory"], [3, 4, 1, "", "state_dict"], [3, 4, 1, "", "to"], [3, 4, 1, "", "to_empty"], [3, 4, 1, "", "train"], [3, 3, 1, "", "training"], [3, 4, 1, "", "type"], [3, 4, 1, "", "xpu"], [3, 4, 1, "", "zero_grad"]], "pufferlib.bindings.nethack": [[4, 1, 1, "", "Crop"], [4, 1, 1, "", "NetHack"], [4, 1, 1, "", "Policy"]], "pufferlib.bindings.nethack.Crop": [[4, 3, 1, "", "T_destination"], [4, 4, 1, "", "add_module"], [4, 4, 1, "", "apply"], [4, 4, 1, "", "bfloat16"], [4, 4, 1, "", "buffers"], [4, 4, 1, "", "children"], [4, 4, 1, "", "cpu"], [4, 4, 1, "", "cuda"], [4, 4, 1, "", "double"], [4, 3, 1, "", "dump_patches"], [4, 4, 1, "", "eval"], [4, 4, 1, "", "extra_repr"], [4, 4, 1, "", "float"], [4, 4, 1, "", "forward"], [4, 4, 1, "", "get_buffer"], [4, 4, 1, "", "get_extra_state"], [4, 4, 1, "", "get_parameter"], [4, 4, 1, "", "get_submodule"], [4, 4, 1, "", "half"], [4, 4, 1, "", "ipu"], [4, 4, 1, "", "load_state_dict"], [4, 4, 1, "", "modules"], [4, 4, 1, "", "named_buffers"], [4, 4, 1, "", "named_children"], [4, 4, 1, "", "named_modules"], [4, 4, 1, "", "named_parameters"], [4, 4, 1, "", "parameters"], [4, 4, 1, "", "register_backward_hook"], [4, 4, 1, "", "register_buffer"], [4, 4, 1, "", "register_forward_hook"], [4, 4, 1, "", "register_forward_pre_hook"], [4, 4, 1, "", "register_full_backward_hook"], [4, 4, 1, "", "register_load_state_dict_post_hook"], [4, 4, 1, "", "register_module"], [4, 4, 1, "", "register_parameter"], [4, 4, 1, "", "requires_grad_"], [4, 4, 1, "", "set_extra_state"], [4, 4, 1, "", "share_memory"], [4, 4, 1, "", "state_dict"], [4, 4, 1, "", "to"], [4, 4, 1, "", "to_empty"], [4, 4, 1, "", "train"], [4, 3, 1, "", "training"], [4, 4, 1, "", "type"], [4, 4, 1, "", "xpu"], [4, 4, 1, "", "zero_grad"]], "pufferlib.bindings.nethack.NetHack": [[4, 2, 1, "", "custom_model_config"]], "pufferlib.bindings.nethack.Policy": [[4, 3, 1, "", "T_destination"], [4, 4, 1, "", "add_module"], [4, 4, 1, "", "apply"], [4, 4, 1, "", "bfloat16"], [4, 4, 1, "", "buffers"], [4, 4, 1, "", "children"], [4, 4, 1, "", "cpu"], [4, 4, 1, "", "critic"], [4, 4, 1, "", "cuda"], [4, 4, 1, "", "decode_actions"], [4, 4, 1, "", "double"], [4, 3, 1, "", "dump_patches"], [4, 4, 1, "", "encode_observations"], [4, 4, 1, "", "eval"], [4, 4, 1, "", "extra_repr"], [4, 4, 1, "", "float"], [4, 4, 1, "", "forward"], [4, 4, 1, "", "get_buffer"], [4, 4, 1, "", "get_extra_state"], [4, 4, 1, "", "get_parameter"], [4, 4, 1, "", "get_submodule"], [4, 4, 1, "", "half"], [4, 4, 1, "", "ipu"], [4, 4, 1, "", "load_state_dict"], [4, 4, 1, "", "modules"], [4, 4, 1, "", "named_buffers"], [4, 4, 1, "", "named_children"], [4, 4, 1, "", "named_modules"], [4, 4, 1, "", "named_parameters"], [4, 4, 1, "", "parameters"], [4, 4, 1, "", "register_backward_hook"], [4, 4, 1, "", "register_buffer"], [4, 4, 1, "", "register_forward_hook"], [4, 4, 1, "", "register_forward_pre_hook"], [4, 4, 1, "", "register_full_backward_hook"], [4, 4, 1, "", "register_load_state_dict_post_hook"], [4, 4, 1, "", "register_module"], [4, 4, 1, "", "register_parameter"], [4, 4, 1, "", "requires_grad_"], [4, 4, 1, "", "set_extra_state"], [4, 4, 1, "", "share_memory"], [4, 4, 1, "", "state_dict"], [4, 4, 1, "", "to"], [4, 4, 1, "", "to_empty"], [4, 4, 1, "", "train"], [4, 3, 1, "", "training"], [4, 4, 1, "", "type"], [4, 4, 1, "", "xpu"], [4, 4, 1, "", "zero_grad"]], "pufferlib.cleanrl": [[5, 5, 1, "", "make_cleanrl_policy"]], "pufferlib.emulation": [[6, 5, 1, "", "PufferWrapper"], [6, 5, 1, "", "unpack_batched_obs"]], "pufferlib.evaluation": [[7, 1, 1, "", "LocalTournament"], [7, 1, 1, "", "ServedTournament"], [7, 1, 1, "", "Tournament"], [7, 5, 1, "", "group"], [7, 5, 1, "", "query_action"], [7, 5, 1, "", "run_game"], [7, 5, 1, "", "serve_rl_model"], [7, 5, 1, "", "ungroup"]], "pufferlib.evaluation.LocalTournament": [[7, 4, 1, "", "add"], [7, 4, 1, "", "init"], [7, 4, 1, "", "remove"], [7, 4, 1, "", "run_match"], [7, 4, 1, "", "server"]], "pufferlib.evaluation.ServedTournament": [[7, 4, 1, "", "add"], [7, 4, 1, "", "init"], [7, 4, 1, "", "remove"], [7, 4, 1, "", "run_match"], [7, 4, 1, "", "server"]], "pufferlib.evaluation.Tournament": [[7, 4, 1, "", "add"], [7, 4, 1, "", "init"], [7, 4, 1, "", "remove"], [7, 4, 1, "", "run_match"], [7, 4, 1, "", "server"]], "pufferlib.frameworks": [[8, 1, 1, "", "BasePolicy"], [8, 5, 1, "", "make_recurrent_policy"]], "pufferlib.frameworks.BasePolicy": [[8, 3, 1, "", "T_destination"], [8, 4, 1, "", "add_module"], [8, 4, 1, "", "apply"], [8, 4, 1, "", "bfloat16"], [8, 4, 1, "", "buffers"], [8, 4, 1, "", "children"], [8, 4, 1, "", "cpu"], [8, 4, 1, "", "critic"], [8, 4, 1, "", "cuda"], [8, 4, 1, "", "decode_actions"], [8, 4, 1, "", "double"], [8, 3, 1, "", "dump_patches"], [8, 4, 1, "", "encode_observations"], [8, 4, 1, "", "eval"], [8, 4, 1, "", "extra_repr"], [8, 4, 1, "", "float"], [8, 4, 1, "", "forward"], [8, 4, 1, "", "get_buffer"], [8, 4, 1, "", "get_extra_state"], [8, 4, 1, "", "get_parameter"], [8, 4, 1, "", "get_submodule"], [8, 4, 1, "", "half"], [8, 4, 1, "", "ipu"], [8, 4, 1, "", "load_state_dict"], [8, 4, 1, "", "modules"], [8, 4, 1, "", "named_buffers"], [8, 4, 1, "", "named_children"], [8, 4, 1, "", "named_modules"], [8, 4, 1, "", "named_parameters"], [8, 4, 1, "", "parameters"], [8, 4, 1, "", "register_backward_hook"], [8, 4, 1, "", "register_buffer"], [8, 4, 1, "", "register_forward_hook"], [8, 4, 1, "", "register_forward_pre_hook"], [8, 4, 1, "", "register_full_backward_hook"], [8, 4, 1, "", "register_load_state_dict_post_hook"], [8, 4, 1, "", "register_module"], [8, 4, 1, "", "register_parameter"], [8, 4, 1, "", "requires_grad_"], [8, 4, 1, "", "set_extra_state"], [8, 4, 1, "", "share_memory"], [8, 4, 1, "", "state_dict"], [8, 4, 1, "", "to"], [8, 4, 1, "", "to_empty"], [8, 4, 1, "", "train"], [8, 3, 1, "", "training"], [8, 4, 1, "", "type"], [8, 4, 1, "", "xpu"], [8, 4, 1, "", "zero_grad"]], "pufferlib.rating": [[9, 1, 1, "", "OpenSkillRating"], [9, 5, 1, "", "rank"]], "pufferlib.rating.OpenSkillRating": [[9, 4, 1, "", "add_policy"], [9, 4, 1, "", "remove_policy"], [9, 4, 1, "", "set_anchor"], [9, 2, 1, "", "stats"], [9, 4, 1, "", "update"]], "pufferlib.rllib": [[10, 1, 1, "", "Callbacks"], [10, 1, 1, "", "RLPredictor"], [10, 5, 1, "", "create_policies"], [10, 5, 1, "", "make_rllib_policy"], [10, 5, 1, "", "make_rllib_tuner"], [10, 5, 1, "", "read_checkpoints"], [10, 5, 1, "", "register_env"]], "pufferlib.rllib.Callbacks": [[10, 4, 1, "", "on_algorithm_init"], [10, 4, 1, "", "on_create_policy"], [10, 4, 1, "", "on_episode_end"], [10, 4, 1, "", "on_episode_start"], [10, 4, 1, "", "on_episode_step"], [10, 4, 1, "", "on_learn_on_batch"], [10, 4, 1, "", "on_postprocess_trajectory"], [10, 4, 1, "", "on_sample_end"], [10, 4, 1, "", "on_sub_environment_created"], [10, 4, 1, "", "on_train_result"], [10, 4, 1, "", "on_trainer_init"]], "pufferlib.rllib.RLPredictor": [[10, 4, 1, "", "from_checkpoint"], [10, 4, 1, "", "from_pandas_udf"], [10, 4, 1, "", "get_preprocessor"], [10, 4, 1, "", "predict"], [10, 4, 1, "", "set_preprocessor"]], "pufferlib.torch": [[11, 1, 1, "", "BatchFirstLSTM"]], "pufferlib.torch.BatchFirstLSTM": [[11, 3, 1, "", "T_destination"], [11, 4, 1, "", "add_module"], [11, 2, 1, "", "all_weights"], [11, 4, 1, "", "apply"], [11, 3, 1, "", "batch_first"], [11, 4, 1, "", "bfloat16"], [11, 3, 1, "", "bias"], [11, 3, 1, "", "bidirectional"], [11, 4, 1, "", "buffers"], [11, 4, 1, "", "check_forward_args"], [11, 4, 1, "", "check_hidden_size"], [11, 4, 1, "", "check_input"], [11, 4, 1, "", "children"], [11, 4, 1, "", "cpu"], [11, 4, 1, "", "cuda"], [11, 4, 1, "", "double"], [11, 3, 1, "", "dropout"], [11, 3, 1, "", "dump_patches"], [11, 4, 1, "", "eval"], [11, 4, 1, "", "extra_repr"], [11, 4, 1, "", "flatten_parameters"], [11, 4, 1, "", "float"], [11, 4, 1, "", "forward"], [11, 4, 1, "", "get_buffer"], [11, 4, 1, "", "get_expected_cell_size"], [11, 4, 1, "", "get_expected_hidden_size"], [11, 4, 1, "", "get_extra_state"], [11, 4, 1, "", "get_parameter"], [11, 4, 1, "", "get_submodule"], [11, 4, 1, "", "half"], [11, 3, 1, "", "hidden_size"], [11, 3, 1, "", "input_size"], [11, 4, 1, "", "ipu"], [11, 4, 1, "", "load_state_dict"], [11, 3, 1, "", "mode"], [11, 4, 1, "", "modules"], [11, 4, 1, "", "named_buffers"], [11, 4, 1, "", "named_children"], [11, 4, 1, "", "named_modules"], [11, 4, 1, "", "named_parameters"], [11, 3, 1, "", "num_layers"], [11, 4, 1, "", "parameters"], [11, 4, 1, "", "permute_hidden"], [11, 3, 1, "", "proj_size"], [11, 4, 1, "", "register_backward_hook"], [11, 4, 1, "", "register_buffer"], [11, 4, 1, "", "register_forward_hook"], [11, 4, 1, "", "register_forward_pre_hook"], [11, 4, 1, "", "register_full_backward_hook"], [11, 4, 1, "", "register_load_state_dict_post_hook"], [11, 4, 1, "", "register_module"], [11, 4, 1, "", "register_parameter"], [11, 4, 1, "", "requires_grad_"], [11, 4, 1, "", "reset_parameters"], [11, 4, 1, "", "set_extra_state"], [11, 4, 1, "", "share_memory"], [11, 4, 1, "", "state_dict"], [11, 4, 1, "", "to"], [11, 4, 1, "", "to_empty"], [11, 4, 1, "", "train"], [11, 3, 1, "", "training"], [11, 4, 1, "", "type"], [11, 4, 1, "", "xpu"], [11, 4, 1, "", "zero_grad"]], "pufferlib.utils": [[12, 5, 1, "", "check_env"], [12, 5, 1, "", "current_datetime"], [12, 1, 1, "", "dotdict"], [12, 5, 1, "", "is_dict_space"], [12, 5, 1, "", "is_multiagent"], [12, 5, 1, "", "myprint"]], "pufferlib.utils.dotdict": [[12, 4, 1, "", "clear"], [12, 4, 1, "", "copy"], [12, 4, 1, "", "fromkeys"], [12, 4, 1, "", "get"], [12, 4, 1, "", "items"], [12, 4, 1, "", "keys"], [12, 4, 1, "", "pop"], [12, 4, 1, "", "popitem"], [12, 4, 1, "", "setdefault"], [12, 4, 1, "", "update"], [12, 4, 1, "", "values"]], "pufferlib.vecenvs": [[13, 1, 1, "", "VecEnvs"], [13, 5, 1, "", "make_remote_envs"]], "pufferlib.vecenvs.VecEnvs": [[13, 4, 1, "", "close"], [13, 4, 1, "", "reset"], [13, 2, 1, "", "single_action_space"], [13, 2, 1, "", "single_observation_space"], [13, 4, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:attribute", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"pufferlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "packag": [1, 2], "bind": [2, 3, 4, 16, 17], "base": 3, "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "nethack": 4, "cleanrl": [5, 16, 17], "emul": [6, 16], "evalu": 7, "framework": 8, "rate": 9, "rllib": [10, 16, 17], "torch": 11, "util": 12, "vecenv": 13, "version": 14, "index": 15, "user": 15, "guid": 15, "exampl": 15, "api": 15, "pytorch": 16, "spec": 16, "environ": 17, "custom": 17, "introduct": 18, "instal": 18, "licens": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"pufferlib": [[0, "pufferlib"]], "pufferlib package": [[1, "module-pufferlib"]], "pufferlib.bindings package": [[2, "module-pufferlib.bindings"]], "pufferlib.bindings.base module": [[3, "module-pufferlib.bindings.base"]], "pufferlib.bindings.nethack module": [[4, "module-pufferlib.bindings.nethack"]], "pufferlib.cleanrl module": [[5, "module-pufferlib.cleanrl"]], "pufferlib.emulation module": [[6, "module-pufferlib.emulation"]], "pufferlib.evaluation module": [[7, "module-pufferlib.evaluation"]], "pufferlib.frameworks module": [[8, "module-pufferlib.frameworks"]], "pufferlib.rating module": [[9, "module-pufferlib.rating"]], "pufferlib.rllib module": [[10, "module-pufferlib.rllib"]], "pufferlib.torch module": [[11, "module-pufferlib.torch"]], "pufferlib.utils module": [[12, "module-pufferlib.utils"]], "pufferlib.vecenvs module": [[13, "module-pufferlib.vecenvs"]], "pufferlib.version module": [[14, "module-pufferlib.version"]], "Index": [[15, "index"]], "User Guide": [[15, null]], "Examples": [[15, null]], "API": [[15, null]], "Emulation": [[16, "emulation"]], "Binding": [[16, "binding"]], "PyTorch Spec": [[16, "pytorch-spec"]], "CleanRL Binding": [[16, "cleanrl-binding"]], "RLlib Binding": [[16, "rllib-binding"]], "Environment Bindings": [[17, "environment-bindings"]], "Custom Environment Binding": [[17, "custom-environment-binding"]], "RLLib": [[17, "rllib"]], "CleanRL": [[17, "cleanrl"]], "Introduction": [[18, "introduction"]], "Installation": [[18, "installation"]], "License": [[18, "license"]]}, "indexentries": {"module": [[1, "module-pufferlib"], [2, "module-pufferlib.bindings"], [3, "module-pufferlib.bindings.base"], [4, "module-pufferlib.bindings.nethack"], [5, "module-pufferlib.cleanrl"], [6, "module-pufferlib.emulation"], [7, "module-pufferlib.evaluation"], [8, "module-pufferlib.frameworks"], [9, "module-pufferlib.rating"], [10, "module-pufferlib.rllib"], [11, "module-pufferlib.torch"], [12, "module-pufferlib.utils"], [13, "module-pufferlib.vecenvs"], [14, "module-pufferlib.version"]], "pufferlib": [[1, "module-pufferlib"]], "pufferlib.bindings": [[2, "module-pufferlib.bindings"]], "base (class in pufferlib.bindings.base)": [[3, "pufferlib.bindings.base.Base"]], "policy (class in pufferlib.bindings.base)": [[3, "pufferlib.bindings.base.Policy"]], "t_destination (pufferlib.bindings.base.policy attribute)": [[3, "pufferlib.bindings.base.Policy.T_destination"]], "add_module() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.add_module"]], "apply() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.apply"]], "auto() (in module pufferlib.bindings.base)": [[3, "pufferlib.bindings.base.auto"]], "bfloat16() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.bfloat16"]], "buffers() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.buffers"]], "children() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.children"]], "cpu() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.cpu"]], "critic() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.critic"]], "cuda() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.cuda"]], "custom_model_config (pufferlib.bindings.base.base property)": [[3, "pufferlib.bindings.base.Base.custom_model_config"]], "decode_actions() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.decode_actions"]], "double() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.double"]], "dump_patches (pufferlib.bindings.base.policy attribute)": [[3, "pufferlib.bindings.base.Policy.dump_patches"]], "encode_observations() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.encode_observations"]], "eval() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.eval"]], "extra_repr() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.extra_repr"]], "float() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.float"]], "forward() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.forward"]], "get_buffer() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.get_buffer"]], "get_extra_state() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.get_extra_state"]], "get_parameter() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.get_parameter"]], "get_submodule() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.get_submodule"]], "half() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.half"]], "ipu() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.ipu"]], "load_state_dict() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.load_state_dict"]], "modules() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.modules"]], "named_buffers() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.named_buffers"]], "named_children() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.named_children"]], "named_modules() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.named_modules"]], "named_parameters() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.named_parameters"]], "parameters() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.parameters"]], "pufferlib.bindings.base": [[3, "module-pufferlib.bindings.base"]], "register_backward_hook() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_backward_hook"]], "register_buffer() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_buffer"]], "register_forward_hook() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_forward_hook"]], "register_forward_pre_hook() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_forward_pre_hook"]], "register_full_backward_hook() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_full_backward_hook"]], "register_load_state_dict_post_hook() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_load_state_dict_post_hook"]], "register_module() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_module"]], "register_parameter() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.register_parameter"]], "requires_grad_() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.requires_grad_"]], "set_extra_state() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.set_extra_state"]], "share_memory() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.share_memory"]], "state_dict() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.state_dict"]], "to() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.to"]], "to_empty() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.to_empty"]], "train() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.train"]], "training (pufferlib.bindings.base.policy attribute)": [[3, "pufferlib.bindings.base.Policy.training"]], "type() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.type"]], "xpu() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.xpu"]], "zero_grad() (pufferlib.bindings.base.policy method)": [[3, "pufferlib.bindings.base.Policy.zero_grad"]], "crop (class in pufferlib.bindings.nethack)": [[4, "pufferlib.bindings.nethack.Crop"]], "nethack (class in pufferlib.bindings.nethack)": [[4, "pufferlib.bindings.nethack.NetHack"]], "policy (class in pufferlib.bindings.nethack)": [[4, "pufferlib.bindings.nethack.Policy"]], "t_destination (pufferlib.bindings.nethack.crop attribute)": [[4, "pufferlib.bindings.nethack.Crop.T_destination"]], "t_destination (pufferlib.bindings.nethack.policy attribute)": [[4, "pufferlib.bindings.nethack.Policy.T_destination"]], "add_module() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.add_module"]], "add_module() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.add_module"]], "apply() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.apply"]], "apply() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.apply"]], "bfloat16() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.bfloat16"]], "bfloat16() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.bfloat16"]], "buffers() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.buffers"]], "buffers() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.buffers"]], "children() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.children"]], "children() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.children"]], "cpu() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.cpu"]], "cpu() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.cpu"]], "critic() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.critic"]], "cuda() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.cuda"]], "cuda() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.cuda"]], "custom_model_config (pufferlib.bindings.nethack.nethack property)": [[4, "pufferlib.bindings.nethack.NetHack.custom_model_config"]], "decode_actions() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.decode_actions"]], "double() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.double"]], "double() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.double"]], "dump_patches (pufferlib.bindings.nethack.crop attribute)": [[4, "pufferlib.bindings.nethack.Crop.dump_patches"]], "dump_patches (pufferlib.bindings.nethack.policy attribute)": [[4, "pufferlib.bindings.nethack.Policy.dump_patches"]], "encode_observations() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.encode_observations"]], "eval() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.eval"]], "eval() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.eval"]], "extra_repr() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.extra_repr"]], "extra_repr() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.extra_repr"]], "float() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.float"]], "float() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.float"]], "forward() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.forward"]], "forward() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.forward"]], "get_buffer() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.get_buffer"]], "get_buffer() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.get_buffer"]], "get_extra_state() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.get_extra_state"]], "get_extra_state() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.get_extra_state"]], "get_parameter() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.get_parameter"]], "get_parameter() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.get_parameter"]], "get_submodule() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.get_submodule"]], "get_submodule() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.get_submodule"]], "half() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.half"]], "half() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.half"]], "ipu() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.ipu"]], "ipu() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.ipu"]], "load_state_dict() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.load_state_dict"]], "load_state_dict() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.load_state_dict"]], "modules() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.modules"]], "modules() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.modules"]], "named_buffers() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.named_buffers"]], "named_buffers() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.named_buffers"]], "named_children() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.named_children"]], "named_children() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.named_children"]], "named_modules() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.named_modules"]], "named_modules() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.named_modules"]], "named_parameters() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.named_parameters"]], "named_parameters() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.named_parameters"]], "parameters() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.parameters"]], "parameters() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.parameters"]], "pufferlib.bindings.nethack": [[4, "module-pufferlib.bindings.nethack"]], "register_backward_hook() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_backward_hook"]], "register_backward_hook() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_backward_hook"]], "register_buffer() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_buffer"]], "register_buffer() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_buffer"]], "register_forward_hook() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_forward_hook"]], "register_forward_hook() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_forward_hook"]], "register_forward_pre_hook() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_forward_pre_hook"]], "register_forward_pre_hook() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_forward_pre_hook"]], "register_full_backward_hook() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_full_backward_hook"]], "register_full_backward_hook() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_full_backward_hook"]], "register_load_state_dict_post_hook() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_load_state_dict_post_hook"]], "register_load_state_dict_post_hook() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_load_state_dict_post_hook"]], "register_module() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_module"]], "register_module() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_module"]], "register_parameter() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.register_parameter"]], "register_parameter() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.register_parameter"]], "requires_grad_() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.requires_grad_"]], "requires_grad_() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.requires_grad_"]], "set_extra_state() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.set_extra_state"]], "set_extra_state() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.set_extra_state"]], "share_memory() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.share_memory"]], "share_memory() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.share_memory"]], "state_dict() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.state_dict"]], "state_dict() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.state_dict"]], "to() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.to"]], "to() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.to"]], "to_empty() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.to_empty"]], "to_empty() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.to_empty"]], "train() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.train"]], "train() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.train"]], "training (pufferlib.bindings.nethack.crop attribute)": [[4, "pufferlib.bindings.nethack.Crop.training"]], "training (pufferlib.bindings.nethack.policy attribute)": [[4, "pufferlib.bindings.nethack.Policy.training"]], "type() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.type"]], "type() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.type"]], "xpu() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.xpu"]], "xpu() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.xpu"]], "zero_grad() (pufferlib.bindings.nethack.crop method)": [[4, "pufferlib.bindings.nethack.Crop.zero_grad"]], "zero_grad() (pufferlib.bindings.nethack.policy method)": [[4, "pufferlib.bindings.nethack.Policy.zero_grad"]], "make_cleanrl_policy() (in module pufferlib.cleanrl)": [[5, "pufferlib.cleanrl.make_cleanrl_policy"]], "pufferlib.cleanrl": [[5, "module-pufferlib.cleanrl"]], "pufferwrapper() (in module pufferlib.emulation)": [[6, "pufferlib.emulation.PufferWrapper"]], "pufferlib.emulation": [[6, "module-pufferlib.emulation"]], "unpack_batched_obs() (in module pufferlib.emulation)": [[6, "pufferlib.emulation.unpack_batched_obs"]], "localtournament (class in pufferlib.evaluation)": [[7, "pufferlib.evaluation.LocalTournament"]], "servedtournament (class in pufferlib.evaluation)": [[7, "pufferlib.evaluation.ServedTournament"]], "tournament (class in pufferlib.evaluation)": [[7, "pufferlib.evaluation.Tournament"]], "add() (pufferlib.evaluation.localtournament method)": [[7, "pufferlib.evaluation.LocalTournament.add"]], "add() (pufferlib.evaluation.servedtournament method)": [[7, "pufferlib.evaluation.ServedTournament.add"]], "add() (pufferlib.evaluation.tournament method)": [[7, "pufferlib.evaluation.Tournament.add"]], "group() (in module pufferlib.evaluation)": [[7, "pufferlib.evaluation.group"]], "init() (pufferlib.evaluation.localtournament method)": [[7, "pufferlib.evaluation.LocalTournament.init"]], "init() (pufferlib.evaluation.servedtournament method)": [[7, "pufferlib.evaluation.ServedTournament.init"]], "init() (pufferlib.evaluation.tournament method)": [[7, "pufferlib.evaluation.Tournament.init"]], "pufferlib.evaluation": [[7, "module-pufferlib.evaluation"]], "query_action() (in module pufferlib.evaluation)": [[7, "pufferlib.evaluation.query_action"]], "remove() (pufferlib.evaluation.localtournament method)": [[7, "pufferlib.evaluation.LocalTournament.remove"]], "remove() (pufferlib.evaluation.servedtournament method)": [[7, "pufferlib.evaluation.ServedTournament.remove"]], "remove() (pufferlib.evaluation.tournament method)": [[7, "pufferlib.evaluation.Tournament.remove"]], "run_game() (in module pufferlib.evaluation)": [[7, "pufferlib.evaluation.run_game"]], "run_match() (pufferlib.evaluation.localtournament method)": [[7, "pufferlib.evaluation.LocalTournament.run_match"]], "run_match() (pufferlib.evaluation.servedtournament method)": [[7, "pufferlib.evaluation.ServedTournament.run_match"]], "run_match() (pufferlib.evaluation.tournament method)": [[7, "pufferlib.evaluation.Tournament.run_match"]], "serve_rl_model() (in module pufferlib.evaluation)": [[7, "pufferlib.evaluation.serve_rl_model"]], "server() (pufferlib.evaluation.localtournament method)": [[7, "pufferlib.evaluation.LocalTournament.server"]], "server() (pufferlib.evaluation.servedtournament method)": [[7, "pufferlib.evaluation.ServedTournament.server"]], "server() (pufferlib.evaluation.tournament method)": [[7, "pufferlib.evaluation.Tournament.server"]], "ungroup() (in module pufferlib.evaluation)": [[7, "pufferlib.evaluation.ungroup"]], "basepolicy (class in pufferlib.frameworks)": [[8, "pufferlib.frameworks.BasePolicy"]], "t_destination (pufferlib.frameworks.basepolicy attribute)": [[8, "pufferlib.frameworks.BasePolicy.T_destination"]], "add_module() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.add_module"]], "apply() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.apply"]], "bfloat16() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.bfloat16"]], "buffers() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.buffers"]], "children() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.children"]], "cpu() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.cpu"]], "critic() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.critic"]], "cuda() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.cuda"]], "decode_actions() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.decode_actions"]], "double() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.double"]], "dump_patches (pufferlib.frameworks.basepolicy attribute)": [[8, "pufferlib.frameworks.BasePolicy.dump_patches"]], "encode_observations() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.encode_observations"]], "eval() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.eval"]], "extra_repr() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.extra_repr"]], "float() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.float"]], "forward() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.forward"]], "get_buffer() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.get_buffer"]], "get_extra_state() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.get_extra_state"]], "get_parameter() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.get_parameter"]], "get_submodule() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.get_submodule"]], "half() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.half"]], "ipu() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.ipu"]], "load_state_dict() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.load_state_dict"]], "make_recurrent_policy() (in module pufferlib.frameworks)": [[8, "pufferlib.frameworks.make_recurrent_policy"]], "modules() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.modules"]], "named_buffers() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.named_buffers"]], "named_children() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.named_children"]], "named_modules() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.named_modules"]], "named_parameters() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.named_parameters"]], "parameters() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.parameters"]], "pufferlib.frameworks": [[8, "module-pufferlib.frameworks"]], "register_backward_hook() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_backward_hook"]], "register_buffer() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_buffer"]], "register_forward_hook() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_forward_hook"]], "register_forward_pre_hook() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_forward_pre_hook"]], "register_full_backward_hook() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_full_backward_hook"]], "register_load_state_dict_post_hook() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_load_state_dict_post_hook"]], "register_module() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_module"]], "register_parameter() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.register_parameter"]], "requires_grad_() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.requires_grad_"]], "set_extra_state() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.set_extra_state"]], "share_memory() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.share_memory"]], "state_dict() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.state_dict"]], "to() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.to"]], "to_empty() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.to_empty"]], "train() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.train"]], "training (pufferlib.frameworks.basepolicy attribute)": [[8, "pufferlib.frameworks.BasePolicy.training"]], "type() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.type"]], "xpu() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.xpu"]], "zero_grad() (pufferlib.frameworks.basepolicy method)": [[8, "pufferlib.frameworks.BasePolicy.zero_grad"]], "openskillrating (class in pufferlib.rating)": [[9, "pufferlib.rating.OpenSkillRating"]], "add_policy() (pufferlib.rating.openskillrating method)": [[9, "pufferlib.rating.OpenSkillRating.add_policy"]], "pufferlib.rating": [[9, "module-pufferlib.rating"]], "rank() (in module pufferlib.rating)": [[9, "pufferlib.rating.rank"]], "remove_policy() (pufferlib.rating.openskillrating method)": [[9, "pufferlib.rating.OpenSkillRating.remove_policy"]], "set_anchor() (pufferlib.rating.openskillrating method)": [[9, "pufferlib.rating.OpenSkillRating.set_anchor"]], "stats (pufferlib.rating.openskillrating property)": [[9, "pufferlib.rating.OpenSkillRating.stats"]], "update() (pufferlib.rating.openskillrating method)": [[9, "pufferlib.rating.OpenSkillRating.update"]], "callbacks (class in pufferlib.rllib)": [[10, "pufferlib.rllib.Callbacks"]], "rlpredictor (class in pufferlib.rllib)": [[10, "pufferlib.rllib.RLPredictor"]], "create_policies() (in module pufferlib.rllib)": [[10, "pufferlib.rllib.create_policies"]], "from_checkpoint() (pufferlib.rllib.rlpredictor class method)": [[10, "pufferlib.rllib.RLPredictor.from_checkpoint"]], "from_pandas_udf() (pufferlib.rllib.rlpredictor class method)": [[10, "pufferlib.rllib.RLPredictor.from_pandas_udf"]], "get_preprocessor() (pufferlib.rllib.rlpredictor method)": [[10, "pufferlib.rllib.RLPredictor.get_preprocessor"]], "make_rllib_policy() (in module pufferlib.rllib)": [[10, "pufferlib.rllib.make_rllib_policy"]], "make_rllib_tuner() (in module pufferlib.rllib)": [[10, "pufferlib.rllib.make_rllib_tuner"]], "on_algorithm_init() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_algorithm_init"]], "on_create_policy() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_create_policy"]], "on_episode_end() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_episode_end"]], "on_episode_start() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_episode_start"]], "on_episode_step() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_episode_step"]], "on_learn_on_batch() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_learn_on_batch"]], "on_postprocess_trajectory() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_postprocess_trajectory"]], "on_sample_end() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_sample_end"]], "on_sub_environment_created() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_sub_environment_created"]], "on_train_result() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_train_result"]], "on_trainer_init() (pufferlib.rllib.callbacks method)": [[10, "pufferlib.rllib.Callbacks.on_trainer_init"]], "predict() (pufferlib.rllib.rlpredictor method)": [[10, "pufferlib.rllib.RLPredictor.predict"]], "pufferlib.rllib": [[10, "module-pufferlib.rllib"]], "read_checkpoints() (in module pufferlib.rllib)": [[10, "pufferlib.rllib.read_checkpoints"]], "register_env() (in module pufferlib.rllib)": [[10, "pufferlib.rllib.register_env"]], "set_preprocessor() (pufferlib.rllib.rlpredictor method)": [[10, "pufferlib.rllib.RLPredictor.set_preprocessor"]], "batchfirstlstm (class in pufferlib.torch)": [[11, "pufferlib.torch.BatchFirstLSTM"]], "t_destination (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.T_destination"]], "add_module() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.add_module"]], "all_weights (pufferlib.torch.batchfirstlstm property)": [[11, "pufferlib.torch.BatchFirstLSTM.all_weights"]], "apply() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.apply"]], "batch_first (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.batch_first"]], "bfloat16() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.bfloat16"]], "bias (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.bias"]], "bidirectional (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.bidirectional"]], "buffers() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.buffers"]], "check_forward_args() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.check_forward_args"]], "check_hidden_size() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.check_hidden_size"]], "check_input() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.check_input"]], "children() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.children"]], "cpu() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.cpu"]], "cuda() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.cuda"]], "double() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.double"]], "dropout (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.dropout"]], "dump_patches (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.dump_patches"]], "eval() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.eval"]], "extra_repr() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.extra_repr"]], "flatten_parameters() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.flatten_parameters"]], "float() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.float"]], "forward() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.forward"]], "get_buffer() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.get_buffer"]], "get_expected_cell_size() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.get_expected_cell_size"]], "get_expected_hidden_size() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.get_expected_hidden_size"]], "get_extra_state() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.get_extra_state"]], "get_parameter() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.get_parameter"]], "get_submodule() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.get_submodule"]], "half() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.half"]], "hidden_size (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.hidden_size"]], "input_size (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.input_size"]], "ipu() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.ipu"]], "load_state_dict() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.load_state_dict"]], "mode (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.mode"]], "modules() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.modules"]], "named_buffers() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.named_buffers"]], "named_children() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.named_children"]], "named_modules() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.named_modules"]], "named_parameters() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.named_parameters"]], "num_layers (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.num_layers"]], "parameters() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.parameters"]], "permute_hidden() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.permute_hidden"]], "proj_size (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.proj_size"]], "pufferlib.torch": [[11, "module-pufferlib.torch"]], "register_backward_hook() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_backward_hook"]], "register_buffer() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_buffer"]], "register_forward_hook() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_forward_hook"]], "register_forward_pre_hook() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_forward_pre_hook"]], "register_full_backward_hook() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_full_backward_hook"]], "register_load_state_dict_post_hook() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_load_state_dict_post_hook"]], "register_module() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_module"]], "register_parameter() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.register_parameter"]], "requires_grad_() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.requires_grad_"]], "reset_parameters() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.reset_parameters"]], "set_extra_state() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.set_extra_state"]], "share_memory() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.share_memory"]], "state_dict() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.state_dict"]], "to() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.to"]], "to_empty() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.to_empty"]], "train() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.train"]], "training (pufferlib.torch.batchfirstlstm attribute)": [[11, "pufferlib.torch.BatchFirstLSTM.training"]], "type() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.type"]], "xpu() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.xpu"]], "zero_grad() (pufferlib.torch.batchfirstlstm method)": [[11, "pufferlib.torch.BatchFirstLSTM.zero_grad"]], "check_env() (in module pufferlib.utils)": [[12, "pufferlib.utils.check_env"]], "clear() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.clear"]], "copy() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.copy"]], "current_datetime() (in module pufferlib.utils)": [[12, "pufferlib.utils.current_datetime"]], "dotdict (class in pufferlib.utils)": [[12, "pufferlib.utils.dotdict"]], "fromkeys() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.fromkeys"]], "get() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.get"]], "is_dict_space() (in module pufferlib.utils)": [[12, "pufferlib.utils.is_dict_space"]], "is_multiagent() (in module pufferlib.utils)": [[12, "pufferlib.utils.is_multiagent"]], "items() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.items"]], "keys() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.keys"]], "myprint() (in module pufferlib.utils)": [[12, "pufferlib.utils.myprint"]], "pop() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.pop"]], "popitem() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.popitem"]], "pufferlib.utils": [[12, "module-pufferlib.utils"]], "setdefault() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.setdefault"]], "update() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.update"]], "values() (pufferlib.utils.dotdict method)": [[12, "pufferlib.utils.dotdict.values"]], "vecenvs (class in pufferlib.vecenvs)": [[13, "pufferlib.vecenvs.VecEnvs"]], "close() (pufferlib.vecenvs.vecenvs method)": [[13, "pufferlib.vecenvs.VecEnvs.close"]], "make_remote_envs() (in module pufferlib.vecenvs)": [[13, "pufferlib.vecenvs.make_remote_envs"]], "pufferlib.vecenvs": [[13, "module-pufferlib.vecenvs"]], "reset() (pufferlib.vecenvs.vecenvs method)": [[13, "pufferlib.vecenvs.VecEnvs.reset"]], "single_action_space (pufferlib.vecenvs.vecenvs property)": [[13, "pufferlib.vecenvs.VecEnvs.single_action_space"]], "single_observation_space (pufferlib.vecenvs.vecenvs property)": [[13, "pufferlib.vecenvs.VecEnvs.single_observation_space"]], "step() (pufferlib.vecenvs.vecenvs method)": [[13, "pufferlib.vecenvs.VecEnvs.step"]], "pufferlib.version": [[14, "module-pufferlib.version"]]}})